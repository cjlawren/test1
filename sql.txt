from sqlalchemy import create_engine, Column, Integer, String, DateTime, Float, ForeignKey
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship

engine = create_engine('mysql+pymysql://root:nopassword@34.83.104.139/test')

Base = declarative_base()

class Subreddit(Base):
    __tablename__ = 'Subreddits'

    id = Column(Integer, primary_key=True)
    name = Column(String(255), nullable=False)
    created = Column(DateTime, nullable=False)

class Post(Base):
    __tablename__ = 'Posts'

    id = Column(Integer, primary_key=True)
    subreddit_id = Column(Integer, ForeignKey('Subreddits.id'), nullable=False)
    subreddit = relationship('Subreddit', backref='posts')
    post_id = Column(String(255), nullable=False)
    created = Column(DateTime, nullable=False)
    raw_title = Column(String(255), nullable=False)
    author = Column(String(255), nullable=False)
    score = Column(Integer, nullable=False)
    awards = Column(Integer, nullable=False)
    comments_num = Column(Integer, nullable=False)
    ups_vote = Column(Integer, nullable=False)
    down_vote = Column(Integer, nullable=False)
    percentage = Column(Float, nullable=False)

class Comment(Base):
    __tablename__ = 'Comments'

    id = Column(Integer, primary_key=True)
    post_id = Column(Integer, ForeignKey('Posts.id'), nullable=False)
    post = relationship('Post', backref='comments')
    comment_id = Column(String(255), nullable=False)
    comment_parent_id = Column(String(255), nullable=True)
    author = Column(String(255), nullable=False)
    raw_comment = Column(String(255), nullable=False)
    score = Column(Integer, nullable=False)
    awards = Column(Integer, nullable=False)
    created = Column(DateTime, nullable=False)

Base.metadata.create_all(engine)
